- name: create namespace
  openshift_v1_project:
    name: '{{ namespace }}'

- name: create volumes
  k8s_v1_persistent_volume_claim:
    name: rds-postgres
    namespace: '{{ namespace }}'
    state: present
    access_modes:
      - ReadWriteOnce
    resources_requests:
      storage: 1Gi

- name: create service
  k8s_v1_service:
    name: rds-postgres
    namespace: '{{ namespace }}'
    state: present
    labels:
      app: postgresql-apb
      service: postgresql
    selector:
      app: postgresql-apb
      service: postgresql
    ports:
    - name: port-5432
      port: 5432
      protocol: TCP
      target_port: 5432

- name: create deployment config
  openshift_v1_deployment_config:
    generation: 1
    labels:
      app: postgresql-apb
      service: postgresql
    name: rds-postgres
    replicas: 1
    selector:
      app: postgresql-apb
      service: postgresql
    strategy_type: Rolling
    strategy_rolling_params:
      interval_seconds: 1
      max_surge: 25%
      max_unavailable: 25%
      timeout_seconds: 600
      update_period_seconds: 1
    spec_template_metadata_labels:
      app: postgresql-apb
      service: postgresql
    containers:
    - env:
      - name: POSTGRES_PASSWORD
        value: '{{ postgresql_password }}'
      - name: POSTGRES_USER
        value: '{{ postgresql_user }}'
      - name: POSTGRES_DB
        value: '{{ postgresql_database }}'
      image: docker.io/jmontleon/postgresql:centos7
      image_pull_policy: IfNotPresent
      name: rds-postgres
      ports:
      - container_port: 5432
        protocol: TCP
      resources: {}
      security_context: {}
      termination_message_path: /dev/termination-log
      volume_mounts:
      - mount_path: /var/lib/pgsql/data
        name: rds-postgres
      working_dir: /
    dns_policy: ClusterFirst
    restart_policy: Always
    termination_grace_period_seconds: 30
    volumes:
    - name: rds-postgres
      persistent_volume_claim:
        claim_name: rds-postgres
      test: false
      triggers:
      - type: ConfigChange


- name: seed database
  shell: "PGPASSWORD={{ db_password }} psql -U {{ db_username }} -d {{ db_name }} -p 5432 -h localhost -f {{ role_path }}/files/{{ item }}"
  with_items:
    - parkcoord.sql
    - airports.ddl
    - zipcodes.ddl
    - airports.sql
    - zipcodes.sql

# - name: create openshift endpoint
#   k8s_v1_endpoint:
#     name: "rds-{{ tds }}"
#     subsets:
#     - addresses:
#         - ip: "{{ rds_endpoint_ip.stdout }}"
#       ports:
#         - port: "{{ port }}"
#           name: "{{ db_engine }}"


# - name: encode bind credentials
#   shell: 'echo "{\"POSTGRES_HOST\": \"{{ endpoint_ip.stdout }}\", \"POSTGRES_PORT\": \"{{ port }}\", \"POSTGRES_USER\": \"{{ db_username }}\", \"POSTGRES_PASSWORD\": \"{{ db_password }}\", \"POSTGRES_DB\": \"{{ db_name }}\"}" | base64 -w 0'
#   register: encoded_bind_credentials

- debug:
    msg: "<BIND_CREDENTIALS>{{ encoded_bind_credentials.stdout }}</BIND_CREDENTIALS>"
